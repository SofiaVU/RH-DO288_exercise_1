apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: app-template
  annotations:
    description: "Quarkus hello world app"
    iconClass: "icon-java"
    tags: "quarkus, java"
objects:
- apiVersion: apps,openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
    labels:
      app: app
    name: app
  spec:
    replicas: 1
    selector:
      app: app
      deploymentconfig: app
    strategy:
      activeDeadlineSeconds: 1
      resources: {}
      rollingParams:
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: rolling
    template:
      metadata:
        annotations:
        labels: 
          app: app
          deploymentconfig: app
      spec:
        containers:
        - env: 
          imagePullPolicy: Always
          name: app
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: CusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange #ImageChange ??
  - imageChangeParams:
      automatic: false
      containerNames:
        - app
        from: 
          kind: ImageStreamTag
          name: app:latest
    type: ImageChange
###### SERVICE ######
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: app
    name: app
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 3306
    selector:
      app: app
      deploymentconfig: app
    sessionAffinity: None
    type: clusterIP
###### ROUTE ######
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: app
    name: app
  spec:
  host: ${HOSTNAME}
    port:
      targetPort: 3306
    to: 
      kind: Service
      name: app
      wight: 100
    wildcardPolicy: None








    


- apiVersion: v1
  kind: Pod
  metadata:
    name: redis-master
  spec:
    containers:
    - env:
      - name: REDIS_PASSWORD
        value: ${REDIS_PASSWORD}
      image: dockerfile/redis
      name: master
      ports:
      - containerPort: 6379
        protocol: TCP
parameters:
- description: Password used for Redis authentication
  from: '[A-Z0-9]{8}'
  generate: expression
  name: REDIS_PASSWORD
labels:
  redis: master